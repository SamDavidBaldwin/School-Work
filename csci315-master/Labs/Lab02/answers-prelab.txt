1) We learned that the memory that is stored on the heap is accessable by both the parent and child processes. If something is written in the heap prior to the spawning of the child process both the child and parent can access it.
2) The closing and reopening of only one single side of the pipe at a time allows for the parent and child to dynamically access the pipe, determiningwhat the specific value of the pid is. Thus both the parent and the child to access the pipe determined by which requires access.
3) Linux files and pipes seem incredibly similar in so far as they use basically all of the same functions, those being read(), write() and close(), and the mechanisms which through they manipulate and store data. The pipe can be essentially visualized as a small file through which data is written and read.
